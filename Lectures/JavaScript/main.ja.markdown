--
parent: Lectures
title: JavaScript
--

これは*「うさぎ先生」*が実際に、とある学校で授業で教えている事を元に、
またその授業用の教材の１つとして使っているものです・ｘ・

実際の講座は（１コマ５０分＋１０分休憩）×３コマ連続枠です。

もし、興味があれば覗いてみて下さい。
ちなみにこのコンテンツのライセンスもCC-BYです。

<nav>

目次と内容

* [1.JavaScriptで楽しみましょう](0001/)
    * [1.1.はじめの環境整備](0001/#はじめの環境整備)
    * [1.2.電卓とJavaScriptの式と関数の考え方](0001/#電卓とJavaScriptの式と関数の考え方)
    * [1.3.変数を使って少しプログラムらしい事をしてみる](0001/#変数を使って少しプログラムらしい事をしてみる)
    * [1.4.関数も使えたなら、もうプログラムらしいものも作れるね](0001/#関数も使えたなら、もうプログラムらしいものも作れるね)
    * [1.5.プログラムをファイルに保存して実行してみよう](0001/#プログラムをファイルに保存して実行してみよう)
    * [1.A.付録](0001/#a.付録)
        * [1.A.1.○○についてもう一度](0001/#a.1.○○についてもう)
        * [1.A.2.お勧めのテキストエディタを教えて下さい](0001/#a.2.お勧めのテキストエディタを教えて下さい)
        * [1.A.3.Windowsとcmdでの実行例](0001/#a.3.Windowsとcmdでの実行例)
* [2.増えるうさぎペアー問題](0002/)
    * [2.1.増える！うさぎペアー問題](0002/#増えるうさぎペアー問題)、
    * [2.2.どんな問題なのかアルゴリズムを考えてみよう](0002/#どんな問題なのかアルゴリズムを考えてみよう)
    * [2.3.「ループ」を使って問題を解くプログラムを作ろう！](0002/#ループを使って問題を解くプログラムを作ろう)
    * [2.4.gistとideone、ソースコードを共有する](0002/#gistとideoneソースコードを共有する)
    * [2.A.付録](0002/#a.付録)
        * [2.A.1](0002/#a.1.)

* [3.GitとGitHub](0003/)
    * [3.1.GitとGitHub](0003/#githubとgithub)
    * [3.2.Gitの導入](0003/#gitの導入)
    * [3.3.GitHubの登録とSSH公開鍵の登録](0003/#githubの登録とssh公開鍵の登録)
    * [3.4.GitHubに空のリポジトリを作成してみよう](0003/#githubに空のリポジトリを作成してみよう)
    * [3.5.ローカルにGitリポジトリを作成してGitHubと繋いでみよう](0003/#ローカルにgitリポジトリを作成してgithubと繋いでみよう)
    * [3.A.付録](0003/#a.付録)
        * [3.A.1.Gitの基本コマンドとその意味](0003/#a.1.gitの基本コマンドとその意味)
        * [3.A.2.WindowsにおけるGitインストーラーについての参考資](0003/#a.2.windowsにおけるgitインストーラーについての参考資)
        * [3.A.3.WindowsやMacにおける快適なGitのGUIフロントエンド](0003/#a.3.windowsやmacにおける快適なgitのguiフロントエンド)
* [4.GitHubを開発と学習の基盤にしよう！](0004/)
    * [4.1.Gitの仕組みについてもう少し詳しく](0004/#gitの仕組みについてもう少し詳しく)
    * [4.2.お隣さんとソーシャル開発１（fork/pull-request）](0004/#お隣さんとソーシャル開発forkpull-request)
    * [4.3.お隣さんとソーシャル開発２（Collaborator）](0004/#お隣さんとソーシャル開発collaborator)
    * [4.4.githubのプロジェクト管理機能](0004/#githubのプロジェクト管理機能)
    * [4.A.付録](0004/#a.付録)
        * [4.A.1.ここらでちょっとイケてるjavascriptのプロダクトやライブラリーを紹介しておこうか・ｗ・](004/#a.1.ここらでちょっとイケてるJavaScriptのプロダクトやライブラリーを紹介しておこうかｗ)
        * [4.A.2.「何かしらのプロジェクト」](0004/#a.2.何かしらのプロジェクト)
* [5.JavaScriptの「本当の」基礎・型システム](0005/)
    * [5.1.JavaScriptの型システム](#javascriptの型システム)
    * [5.1.1.JavaScriptの型](#javascriptの型)
    * [5.1.2.JavaScriptの型の一覧](#javascriptの方の一覧)
    * [5.1.2.1.Number型](#number型)
    * [5.1.2.2.String型](#string型)
    * [5.1.2.3.Boolean型](#boolean型)
    * [5.1.2.4.Object型](#object型)
    * [5.1.2.4.1.配列リテラル](#配列リテラル)
    * [5.1.2.5.Undefined型とNull型](#undefined型とnull型)
    * [5.1.3.JavaScriptの型変換](#javascriptの型変換)
    * [5.1.3.1.暗黙の型変換](#暗黙の型変換)
    * [5.1.4.JavaScriptの型の分類: 値型と参照型](#javascriptの方の分類値型と参照型)
    * [5.1.4.1.配列リテラル](#配列リテラル)
    * [5.1.4.2.リテラル](#リテラル)
    * [5.A.付録](#a.付録)
        * [5.A.1.プロジェクトのスタートアップ](#a.1.プロジェクトのスタートアップ)
* [6.JavaScriptの「本当の」基礎・制御文](0006/)
    * [6.1.JavaScriptの制御文](#javascriptの制御文)
    * [6.2.JavaScriptの制御文の一覧](#javascriptの制御文の一覧)
        * [6.2.1.do-while文](#do-while文)
        * [6.2.2.while文](#while文)
        * [6.2.3.for文](#for文)
        * [6.2.4.for-in文](#for-in文)
        * [6.2.5.continue文](#continue文)
        * [6.2.6.break文](#break文)
        * [6.2.7.return文](#return文)
        * [6.2.8.if文](#if文)
        * [6.2.9.switch文](#switch文)
    * [6.A.付録](#a.付録)
    * [6.A.1.制御文を使わない「高階関数」によるループ](#a.1.制御文を使わない高階関数によるループ)
    * [6.A.2.JavaScriptの「文」のTIPS](#a.2.javascriptの文のtips)
    * [6.A.3.プロジェクトの序盤から活躍できる便利なツールたちの紹介](#a.3.プロジェクトの序盤から活躍できる便利なツールたちの紹介)
* [7.JavaScriptの演算子と式](0007/)
    * [7.1.プログラミング言語に於ける演算子と式](0007/#プログラミング言語に於ける演算子と式)
        * [7.2.JavaScriptの演算子](0007/#javascriptの演算子)
        * [7.2.1.単項演算子 加減算系 `++` `--`](0007/#単項演算子-加減算系---)
        * [7.2.2.単項演算子 符号系 `+` `-`](0007/#単項演算子-符号系--)
        * [7.2.3.単項演算子 ビット反転 `~`](0007/#単項演算子-ビット反転)
        * [7.2.4.単項演算子 否定 `!`](0007/#単項演算子-否定)
        * [7.2.5.二項演算子 乗除算系 `*` `/` `%`](0007/#二項演算子-乗除算系)
        * [7.2.6.二項演算子 加減算系 `+` `-`](0007/#二項演算子-加減算系--)
        * [7.2.7.二項演算子 ビットシフト系 `<<` `>>` `>>>`](0007/#二項演算子-ビットシフト系)
        * [7.2.8.二項演算子 関係性系 `<` `>` `<=` `>=`](0007/#二項演算子-関係性系)
        * [7.2.9.二項演算子 等価性系 `==` `!=` `===` `!==`](0007/#二項演算子-等価性系)
        * [7.2.10.二項演算子 ビット論理操作系 `&` `^` `|`](0007/#二項演算子-ビット論理操作系)
        * [7.2.11.二項演算子 論理系 `&&` `||`](0007/#二項演算子-論理系)
        * [7.2.12.二項演算子 代入系 `=` `*=` `/=` `%=` `+=` `-=` `<<=` `>>=` `>>>=` `&=` `^=` `|=`](0007/#二項演算子-代入系)
        * [7.2.13.三項演算子 条件 `? :`](0007/#三項演算子-条件)
        * [7.2.14.特殊な演算子 `new` `delete` `instanceOf` `typeof` `void` `in` `,` `.`](0007/#特殊な演算子-new-delete-instanceof-typeof-void-in)
        * [7.2.15.演算子の優先順位と結合性](0007/#演算子の優先順位と結合性)
    * [7.A.付録](0007/#a.付録)
        * [7.A.1.ゲーム開発プロジェクト事例紹介: 某Aiming社 Load of Knights](0007/#a.1.ゲーム開発プロジェクト事例紹介-某aiming社-load-of-knights)
* [8. JavaScriptオブジェクト指向プログラミング](0008/)
    * [8.1.JavaScriptのオブジェクト指向とハッシュオブジェクト](0008/#javascriptのオブジェクト指向とハッシュオブジェクト)
    * [8.2.this式](0008/#this式)
    * [8.3.new演算子とdelete演算子](0008/#new演算子とdelete演算子)
        * [8.3.1.new 演算子](0008/#new演算子)
        * [8.3.2.delete 演算子](0008/#delete演算子)
    * [8.4.プロトタイプ](0008/#プロトタイプ)
        * [8.4.1.プロトタイプとは何か？](0008/#プロトタイプとは何か)
        * [8.4.2.プロトタイプ継承とコンストラクターでのthisの使い分け](0008/#プロトタイプ継承とコンストラクターでのthisの使い分け)
        * [8.4.3.instanceof 演算子](0008/#instanceof演算子)
    * [8.5.コメント](0008/#コメント)
    * [8.A.付録](0008/#a.付録)
    * [8.A.1.オブジェクト指向JavaScriptプログラムサンプル](0008/#a.1.オブジェクト指向javascriptプログラムサンプル)
* [9.クライアントサイドJavaScriptプログラミング入門...の為のHTMLとCSSの入門](0009/)
    * [9.1.HTML5入門](0009/#html5入門)
        * [9.1.1.HTMLとは何なのか？](0009/#htmlとは何なのか)
        * [9.1.2.最も小さなHTML5文書](0009/#最も小さなhtml5文書)
        * [9.1.3.基本的な文書構造](0009/#基本的な文書構造)
            * [9.1.3.1.`<p>` 段落](0009/#p-段落)
            * [9.1.3.2.`<h1>` `<h2>` `<h3>` `<h4>` `<h5>` 見出し](0009/#h1-h2-h3-h4-h5-見出し)
            * [9.1.3.3.`<article>` 記事タグ](0009/#article-記事タグ)
            * [9.1.3.4.`<header>` お頭タグ `<footer>` 尾びれタグ](0009/#header-お頭タグ-footer-尾びれタグ)
            * [9.1.3.5.`<div>`と`<span>`](0009/#divとspan)
            * [9.1.3.6.`<img>` 画像の内挿](0009/#img-画像の内挿)
            * [9.1.3.7.HTMLマークアップの応用と発展](0009/#htmlマークアップの応用と発展)
    * [9.2.CSSとは何なのか？](0009/#cssとは何なのか)
        * [9.2.1.文書構造と見た目の分離](0009/#文書構造と見た目の分離)
        * [9.2.2.セレクターとか](0009/#セレクターとか)
        * [9.2.3.プロパティとか](0009/#プロパティとか)
        * [9.2.4.カスケーディングとは何だったのか](0009/#カスケーディングとは何だったのか)
        * [9.2.5.HTMLとCSSのファイル分離](0009/#htmlとcssのファイル分離)
        * [9.2.6.CSSと`@`（シナモンロール）](0009/#cssとシナモンロール)
    * [9.A.付録](0009/#a.付録)
* [10.クライアントサイドJavaScriptプログラミング入門](0010/)

</nav>

